{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Project Skill Test Aji Raksa Kumala",
    "description": "Documentation automatically generated by the <b>swagger</b> module."
  },
  "servers": [
    {
      "url": "http://localhost:4002/"
    },
    {
      "url": "https://localhost:4002/"
    }
  ],
  "tags": [
    {
      "name": "book-controller"
    },
    {
      "name": "user-controller"
    },
    {
      "name": "publisher-controller"
    },
    {
      "name": "my-authentication-controller"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "tags": [
          "my-authentication-controller"
        ],
        "summary": "Login",
        "description": "Login using registered email and password",
        "responses": {
          "200": {
            "description": "Successfull login will get token, and the token must be included in every request for authorization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelJwtResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelJwtResponse"
                }
              }
            }
          },
          "500": {
            "description": "Login failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelJwtResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelJwtResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JwtRequest"
              }
            }
          }
        }
      }
    },
    "/book": {
      "get": {
        "tags": [
          "book-controller"
        ],
        "summary": "List all books",
        "description": "Get the list of all books",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelListBookDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelListBookDto"
                }
              }
            }
          },
          "401": {
            "description": "Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelErrorToken"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelErrorToken"
                }
              }
            }
          }
        },
        "security": [
          {
            "tokenAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "book-controller"
        ],
        "summary": "Update book",
        "description": "Modify or update the book",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelBookDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelBookDto"
                }
              }
            }
          },
          "401": {
            "description": "Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelErrorToken"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelErrorToken"
                }
              }
            }
          },
          "500": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelErrorToken"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelErrorToken"
                }
              }
            }
          }
        },
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "book-controller"
        ],
        "summary": "Add new book",
        "description": "Adding new book",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelBookDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelBookDto"
                }
              }
            }
          },
          "401": {
            "description": "Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelErrorToken"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelErrorToken"
                }
              }
            }
          },
          "500": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelErrorToken"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelErrorToken"
                }
              }
            }
          }
        },
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddBookRequest"
              }
            }
          }
        }
      }
    },
    "/book/{id}": {
      "get": {
        "tags": [
          "book-controller"
        ],
        "summary": "Get book by id",
        "description": "Get book by its identifier (id)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelBookDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelBookDto"
                }
              }
            }
          },
          "401": {
            "description": "Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelErrorToken"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelErrorToken"
                }
              }
            }
          }
        },
        "security": [
          {
            "tokenAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "book-controller"
        ],
        "summary": "Delete a book",
        "description": "Delete a book by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelBook"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelBook"
                }
              }
            }
          },
          "401": {
            "description": "Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelErrorToken"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelErrorToken"
                }
              }
            }
          }
        },
        "security": [
          {
            "tokenAuth": []
          }
        ]
      }
    },
    "/publisher": {
      "get": {
        "tags": [
          "publisher-controller"
        ],
        "summary": "List all publishers",
        "description": "Get the list of all publishers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelIterablePublisher"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelIterablePublisher"
                }
              }
            }
          },
          "401": {
            "description": "Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelErrorToken"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelErrorToken"
                }
              }
            }
          }
        },
        "security": [
          {
            "tokenAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "publisher-controller"
        ],
        "summary": "Add or edit publisher",
        "description": "Add or edit publisher, if id is null then will add new publisher",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelPublisher"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelPublisher"
                }
              }
            }
          },
          "401": {
            "description": "Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelErrorToken"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelErrorToken"
                }
              }
            }
          },
          "500": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelErrorToken"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelErrorToken"
                }
              }
            }
          }
        },
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Publisher"
              }
            }
          }
        }
      }
    },
    "/publisher/{id}": {
      "get": {
        "tags": [
          "publisher-controller"
        ],
        "summary": "Get publisher by id",
        "description": "Get publisher by its identifier (id)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelPublisher"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelPublisher"
                }
              }
            }
          },
          "401": {
            "description": "Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelErrorToken"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelErrorToken"
                }
              }
            }
          }
        },
        "security": [
          {
            "tokenAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "publisher-controller"
        ],
        "summary": "Delete a publisher",
        "description": "Delete a publisher by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelPublisher"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelPublisher"
                }
              }
            }
          },
          "401": {
            "description": "Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelErrorToken"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelErrorToken"
                }
              }
            }
          }
        },
        "security": [
          {
            "tokenAuth": []
          }
        ]
      }
    },
    "/users/register": {
      "post": {
        "tags": [
          "user-controller"
        ],
        "summary": "Register new user",
        "description": "Registering for new user",
        "responses": {
          "200": {
            "description": "Successfull registration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelUserDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelUserDto"
                }
              }
            }
          },
          "500": {
            "description": "Status code 500 in the response means registration failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelUserDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseModelUserDto"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "tokenAuth": {
        "type": "http",
        "scheme": "bearer",
        "in": "header",
        "name": "Authorization",
        "description": "Masukan token disini ..."
      }
    },
    "schemas": {
      "HttpResponseModelUserDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "number",
            "example": 1
          },
          "message": {
            "type": "string",
            "example": "string"
          },
          "data": {
            "xml": {
              "name": "userdto"
            },
            "$ref": "#/components/schemas/UserDto"
          }
        },
        "xml": {
          "name": "HttpResponseModelUserDto"
        }
      },
      "HttpResponseModelJwtResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "number",
            "example": 1
          },
          "message": {
            "type": "string",
            "example": "string"
          },
          "data": {
            "xml": {
              "name": "jwtresponse"
            },
            "$ref": "#/components/schemas/JwtResponse"
          }
        },
        "xml": {
          "name": "HttpResponseModelJwtResponse"
        }
      },
      "HttpResponseModelErrorToken": {
        "type": "object",
        "properties": {
          "status": {
            "type": "number",
            "example": 0
          },
          "message": {
            "type": "string",
            "example": "string"
          },
          "data": {}
        },
        "xml": {
          "name": "HttpResponseModelErrorToken"
        }
      },
      "HttpResponseModelPublisher": {
        "type": "object",
        "properties": {
          "status": {
            "type": "number",
            "example": 1
          },
          "message": {
            "type": "string",
            "example": "string"
          },
          "data": {
            "xml": {
              "name": "publisher"
            },
            "$ref": "#/components/schemas/Publisher"
          }
        },
        "xml": {
          "name": "HttpResponseModelPublisher"
        }
      },
      "HttpResponseModelIterablePublisher": {
        "type": "object",
        "properties": {
          "status": {
            "type": "number",
            "example": 1
          },
          "message": {
            "type": "string",
            "example": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "xml": {
                "name": "publisher"
              },
              "$ref": "#/components/schemas/Publisher"
            }
          }
        },
        "xml": {
          "name": "HttpResponseModelIterablePublisher"
        }
      },
      "HttpResponseModelBook": {
        "type": "object",
        "properties": {
          "status": {
            "type": "number",
            "example": 1
          },
          "message": {
            "type": "string",
            "example": "string"
          },
          "data": {
            "xml": {
              "name": "book"
            },
            "$ref": "#/components/schemas/Book"
          }
        },
        "xml": {
          "name": "HttpResponseModelBook"
        }
      },
      "HttpResponseModelBookDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "number",
            "example": 1
          },
          "message": {
            "type": "string",
            "example": "string"
          },
          "data": {
            "xml": {
              "name": "bookdto"
            },
            "$ref": "#/components/schemas/BookDto"
          }
        },
        "xml": {
          "name": "HttpResponseModelBookDto"
        }
      },
      "HttpResponseModelListBookDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "number",
            "example": 1
          },
          "message": {
            "type": "string",
            "example": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "xml": {
                "name": "bookdto"
              },
              "$ref": "#/components/schemas/BookDto"
            }
          }
        },
        "xml": {
          "name": "HttpResponseModelListBookDto"
        }
      },
      "RegistrationRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          }
        }
      },
      "UserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          }
        }
      },
      "JwtRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "ajiraksakumala@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "12345Aji$"
          }
        }
      },
      "JwtResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        }
      },
      "Book": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "isbn": {
            "type": "string"
          },
          "publisherId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BookDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "isbn": {
            "type": "string"
          },
          "publisher": {
            "type": "string"
          }
        }
      },
      "AddBookRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "isbn": {
            "type": "string"
          },
          "publisherId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Publisher": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        }
      }
    }
  }
}